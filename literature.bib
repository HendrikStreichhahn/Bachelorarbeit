\selectlanguage{english}
Beschreibung der Historie auf Webseite
@misc{AUTOSAR_History,
  title = {AUTOSAR History},
  howpublished = {\url{https://www.autosar.org/about/history/}},
  note = {Online; Zugriff am 24.8.2020},
  author = {AUTOSAR},
  year = {2020}
}


@misc{TIMEX,
  author = {AUTOSAR},
  title = {Specification of Timing Extensions},
  institution = {AUTOSAR},
  year = {2018},
  number = {4.0}
}

TIMMO2USE
@misc{TIMMO2USE,
  author = {Hans Blom and Dr. Lei Feng and Dr. Henrik Lönn and Dr. Johan Nordlander and Stefan Kuntz and Dr. Björn Lisper and Dr. Sophie Quinton and Dr. Matthias Hanke and Dr. Marie-Agnès Peraldi-Frati and Dr. Arda Goknil and Dr. Julien Deantoni and Gilles Bertrand Defo and Kay Klobedanz and Mesut Özhan and Olha Honcharova},
  title = {TIMMO2USE Language syntax, semantics, metamodel V2},
  institution = {ITEA2},
  year = {2012},
  number = {1.2},
  note={}
}

@inproceedings{TeSSLa1,
	author = {Leucker, Martin and Sanchez, Cesar and Scheffel, Torben and Schmitz, Malte and Schramm, Alexander},
	year = {2018},
	month = {04},
	pages = {1925-1933},
	title = {TeSSLa: runtime verification of non-synchronized real-time streams},
	doi = {10.1145/3167132.3167338}
}

TeSSLa2
@InProceedings{TeSSLa2,
	author="Convent, Lukas
	and Hungerecker, Sebastian
	and Leucker, Martin
	and Scheffel, Torben
	and Schmitz, Malte
	and Thoma, Daniel",
	editor="Massoni, Tiago
	and Mousavi, Mohammad Reza",
	title="TeSSLa: Temporal Stream-Based Specification Language",
	booktitle="Formal Methods: Foundations and Applications",
	year="2018",
	publisher="Springer International Publishing",
	address="Cham",
	pages="144--162",
	abstract="Runtime verification is concerned with monitoring program traces. In particular, stream runtime verification (SRV) takes the program trace as input streams and incrementally derives output streams. SRV can check logical properties and compute temporal metrics and statistics from the trace. We present TeSSLa, a temporal stream-based specification language for SRV. TeSSLa supports timestamped events natively and is hence suitable for streams that are both sparse and fine-grained, which often occur in practice. We prove results on TeSSLa's expressiveness and compare different TeSSLa fragments to (timed) automata, thereby inheriting various decidability results. Finally, we present a monitor implementation and prove its correctness.",
	isbn="978-3-030-03044-5"
}


@INPROCEEDINGS{LOLA,  author={B. {D'Angelo} and S. {Sankaranarayanan} and C. {Sanchez} and W. {Robinson} and B. {Finkbeiner} and H. B. {Sipma} and S. {Mehrotra} and Z. {Manna}},  booktitle={12th International Symposium on Temporal Representation and Reasoning (TIME'05)},   title={LOLA: runtime monitoring of synchronous systems},   year={2005},  volume={},  number={},  pages={166-174},  doi={10.1109/TIME.2005.26}}

TiCL
@article{TiCL,
	author = {Björn Lisper and Johan Nordlander},
	title = {A Simple and flexible Timing Constraint Logic},
	journal = {In 5th International Symposium On Leveraging Applications of Formal Methods, Verification and Validation (ISoLA), 15-18 October 2012,	Amirandes, Heraklion, Crete.},
	year = {2012}
}

RuntimeVerification
@article{RuntimeVerification,
	author= {Martin Leucker and Christian Schallhart},
	title = {A brief account of runtime verification},
	journal = {The Journal of Logic and Algebraic Programming 78},
	year = {2009}
}

Virtual_Functional_Bus
@misc{Virtual_Functional_Bus,
	author = {AUTOSAR},
	title = {Virtual Functional Bus, 4.3.1},
	month = {December},
	year = {2017},
	url = {https://www.autosar.org/fileadmin/user_upload/standards/classic/4-3/AUTOSAR_EXP_VFB.pdf},
	urldate = {10/9/2020}}

@BOOK{Berstel1979,
	AUTHOR = {Berstel, Jean},
	YEAR = {1979},
	TITLE = {Transductions and Context-Free Languages - },
	EDITION = {},
	ISBN = {978-3-519-02340-1},
	PUBLISHER = {Vieweg+Teubner Verlag},
	ADDRESS = {Wiesbaden},
}

@misc{ScalaRuntime,
	title = {Performance Characteristics | Collections (Scala 2.8 - 2.12)},
	howpublished = {\url{https://docs.scala-lang.org/overviews/collections/performance-characteristics.html}},
	note = {Accessed: 2020-11-13}
}

@misc{AUTOSARpartner,
	title = {Current Partners - AUTOSAR},
	howpublished = {\url{https://www.autosar.org/about/current-partners/}},
	note = {Accessed: 2020-11-13}
}


@InProceedings{ALUR1994183,
author="Alur, Rajeev
and Dill, David",
editor="de Bakker, J. W.
and Huizing, C.
and de Roever, W. P.
and Rozenberg, G.",
title="The theory of timed automata",
booktitle="Real-Time: Theory in Practice",
year="1992",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="45--73",
abstract="We propose timed automata to model the behavior of real-time systems over time. Our definition provides a simple, and yet powerful, way to annotate state-transition graphs with timing constraints using finitely many real-valued clocks. A timed automaton accepts timed words --- strings in which a real-valued time of occurrence is associated with each symbol. We study timed automata from the perspective of formal language theory: we consider closure properties, decision problems, and subclasses. We discuss the application of this theory to automatic verification of real-time requirements of finite-state systems.",
isbn="978-3-540-47218-6"
}


@INPROCEEDINGS{8342124,
	author={N. {Decker} and B. {Dreyer} and P. {Gottschling} and C. {Hochberger} and A. {Lange} and M. {Leucker} and T. {Scheffel} and S. {Wegener} and A. {Weiss}},
	booktitle={2018 Design, Automation   Test in Europe Conference   Exhibition (DATE)}, 
	title={Online analysis of debug trace data for embedded systems}, 
	year={2018},
	volume={},
	number={},
	pages={851-856},
	doi={10.23919/DATE.2018.8342124}}
	
@InProceedings{10.1007/978-3-540-77395-5_11,
author="Bauer, Andreas
and Leucker, Martin
and Schallhart, Christian",
editor="Sokolsky, Oleg
and Ta{\c{s}}{\i}ran, Serdar",
title="The Good, the Bad, and the Ugly, But How Ugly Is Ugly?",
booktitle="Runtime Verification",
year="2007",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="126--138",
abstract="When monitoring a system wrt a property defined in some temporal logic, e.g., LTL, a major concern is to settle with an adequate interpretation of observable system events; that is, models of temporal logic formulae are usually infinite streams of events, whereas at runtime only prefixes are available.",
isbn="978-3-540-77395-5"
}

@article{1157,
author = {Arafat, Oliver and Bauer, Andreas and Leucker, Martin and Schallhart, Christian},
year = {2005},
month = {},
pages = {},
title = {Runtime verification revisited}
}

@InProceedings{10.1007/3-540-15648-8_16,
author="Lichtenstein, Orna
and Pnueli, Amir
and Zuck, Lenore",
editor="Parikh, Rohit",
title="The glory of the past",
booktitle="Logics of Programs",
year="1985",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="196--218",
abstract="An extension of propositional temporal logic that includes operators referring to a bounded past is considered. An exponential time decision procedure and a complete axiomatic system are presented. A suggested normal form leads to a syntactic classification of safety and liveness formulae. The adequacy of temporal logic to modular verification is examined. Finally we present the notion of $\alpha$-fairness which is proved to fully capture the behavior of probabilistic finite state programs.",
isbn="978-3-540-39527-0"
}



